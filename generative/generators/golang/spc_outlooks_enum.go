package golang

import (
	"fmt"
	"os"
	"strings"
	"time"
)

const spcOutlookGoTopComment = `// This file was generated by generative/generators/golang/spc_outlooks_enum_go.golang.
// Please do not hand write.

package golang

`

func GenerateSpcOutlookGo() {
	// Read the contents of the file
	filePath := "generators/templates/spc_outlooks.txt"
	content, err := os.ReadFile(filePath)
	if err != nil {
		fmt.Printf("Failed to read file: %v\n", err)
		return
	}

	// Split the content into lines
	lines := strings.Split(string(content), "\n")

	// Add generated time
	generated := "// Generated on " + time.Now().String() + "\n"

	// Add block comment
	generated += spcOutlookGoTopComment

	// Write the Go enum to the file
	generated += "type SPCOutlookType string\n\n"

	generated += "const (\n"

	// Process each line of the file
	for _, line := range lines {
		line = strings.TrimSpace(line)

		// Skip empty lines
		if line == "" {
			continue
		}

		// Extract the day and category
		spacelessString := strings.ReplaceAll(line, " ", "")

		// Generate the Go enum case
		enumCase := fmt.Sprintf("\t%s SPCOutlookType = \"%s\"\n", spacelessString, line)
		generated += enumCase
	}

	// Close the Go enum
	generated += ")\n"

	// Write the generated Go enum to a file
	file, err := os.Create("golang/spc_outlooks.go")
	if err != nil {
		fmt.Printf("Error creating file: %v\n", err)
		return
	}
	defer file.Close()

	file.Write([]byte(generated))
}
